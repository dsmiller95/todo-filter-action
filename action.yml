name: todo-filter-action
description: Filter through Todos in a project, and output any pending todos to a pull request comment, based on properties of the pull request
author: Dan Miller <dsmiller95@gmail.com>
inputs:
  linked-issues:
    description: 'Linked issues from the pull request body'
    required: true
  root-path:
    description: 'The root path of the project to search for TODOs'
    required: false
    default: '.'
  file-pattern:
    description: 'A generic pattern to filter out non-source files (e.g., *.cs)'
    required: false
    default: '*.cs'
  token:
    description: 'The GitHub token to use for downloading the action, defaults to workflow token'
    required: true
    default: ${{ github.token }}
    
outputs:
  todos:
    description: 'The JSON representation of TODOs found'
    value: ${{ steps.run.outputs.todos }}

runs:
  using: 'composite'
  steps:
    - name: Set reusable variables
      shell: bash
      run: |
        echo "action_repo=todo-filter-action" >> $GITHUB_ENV
        echo "action_org=dsmiller95" >> $GITHUB_ENV
        echo "binary_name=todo-filter-action" >> $GITHUB_ENV

    - name: Add binary extension
      shell: bash
      if: runner.os == 'Windows'
      run: echo "binary_name=${{ env.binary_name }}.exe" >> $GITHUB_ENV

    - name: Get Action Version
      id: get_action_version
      shell: pwsh
      run: |
        $finalComponent = Split-Path -Leaf ${{ github.action_path }}
        if ($finalComponent -eq "${{ env.action_repo }}") {
          $version = ""
        } else {
          $version = $finalComponent
        }
        Write-Output "version=$version" >> $Env:GITHUB_OUTPUT

    - name: Download Action
      shell: bash
      run: |
        gh release download ${{ steps.get_action_version.outputs.version }} --repo ${{ env.action_org }}/${{ env.action_repo }} --pattern '${{ runner.os }}.tgz'
        tar -xzf ${{ runner.os }}.tgz
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: Run Action
      shell: bash
      id: run
      run: |
        ./${{ runner.os }}/${{ env.binary_name }} "${{ inputs.linked-issues }}" "${{ inputs.root-path }}" "${{ inputs.file-pattern }}"
